///* #DEFAULTS
//\*------------------------------------*/




// Theme Colors

$color-1: #004899;
$color-2: #ffd870;
$color-3: $olive;

$color1-light:  lighten($color-1, 10);
$color2-light:  lighten($color-2, 10);
$color3-light:  lighten($color-3, 10);
$color1-dark:  darken($color-1, 10);
$color2-dark:  darken($color-2, 10);
$color3-dark:  darken($color-3, 10);

$color-text: $grey-700;

$base-font-size: 16px;
$base-line-height: 1.5;

// Base Styles
$font-family: 'Helvetica Neue', Helvetica, sans-serif;
$line-height: 1.5;
$heading-font-family: $font-family;
$heading-font-weight: 500;
$heading-line-height: 1.25;
$monospace-font-family: 'Source Code Pro', Consolas, monospace;
$h1: 2rem;
$h2: 1.5rem;
$h3: 1.25rem;
$h4: 1rem;
$h5: .875rem;
$h6: .75rem;
$body-font-size: $base-font-size;
$bold-font-weight: bold;
$pre-font-size: inherit;

$space-1: .5rem;
$space-2: 1rem;
$space-3: 2rem;
$space-4: 4rem;

$heading-margin-top: 1em;
$heading-margin-bottom: .5em;
$paragraph-margin-top: 0;
$paragraph-margin-bottom: $space-2;
$list-margin-top: 0;
$list-margin-bottom: $space-2;
$pre-margin-top: 0;
$pre-margin-bottom: $space-2;

$form-field-font-family: inherit;
$form-field-font-size: 1rem;
$form-field-height: 2.25rem;
$form-field-padding-y: .5rem;
$form-field-padding-x: .5rem;

$button-font-size: inherit;
$button-font-weight: normal;
$button-line-height: 1.125rem;
$button-padding-y: .5rem;
$button-padding-x: 1rem;

$container-width: 64em;
$container-wide: 84em;

$darken-1: rgba(0,0,0,.0625);
$darken-2: rgba(0,0,0,.125);
$darken-3: rgba(0,0,0,.25);
$darken-4: rgba(0,0,0,.5);

$lighten-1: rgba(255,255,255,.0625);
$lighten-2: rgba(255,255,255,.125);
$lighten-3: rgba(255,255,255,.25);
$lighten-4: rgba(255,255,255,.5);

$border-width: 1px;
$border-radius: 2px;
$border-color: $darken-2;

$table-header-font-weight: $bold-font-weight;
$table-cell-padding-x: $space-2;
$table-cell-padding-y: .25rem;

$opacity: 0.7;

$body-color: $color-text;
$body-background-color: $white;
$link-color: $blue;
$link-text-decoration: none;
$link-hover-text-decoration: none;
$pre-background-color: transparent;
$pre-border-radius: $border-radius;
$rule-border-style: solid;
$rule-border-width: $border-width;
$rule-border-color: $border-color;























// Mixin to create a declaration whose value is a rem unit. Also provide pixel fallback.
//
// .simple-uabraham {
//   @include rem(padding, 10px);
// }

@mixin rem($property, $value) {
    @if not $supports-rem {
        #{$property}: $value;
    }
    #{$property}: $value / $base-font-size * 1rem;
}




// Generate `:hover` and `:focus` styles in one go.
@mixin hocus() {
    &:hover,
    &:focus {
        @content;
    }
}


$supports-rem: false;

// Create a fully formed type style (sizing and vertical rhythm) by passing in a
// single value, e.g.:
//
// .foo {
//     @include font-size(10px);
// }
@mixin font-size($font-size, $line-height: auto) {
    @if not $supports-rem {
        font-size: $font-size;
    }
    font-size: ($font-size / $base-font-size) * 1rem;

    @if $line-height == auto {
        line-height: ceil($font-size / $base-line-height) * ($base-line-height / $font-size);
    }

    @else {

        @if (type-of($line-height) == number or $line-height == inherit or $line-height == normal) {
            line-height: $line-height;
        }

        @elseif ($line-height != none and $line-height != false) {
            @warn "D’oh! ‘#{$line-height}’ is not a valid value for `line-height`."
        }

    }

}




@mixin font-size-sm {
    @include font-size($base-font-size - 2);
}

@mixin font-size-md {
    @include font-size($base-font-size);
}

@mixin font-size-lg {
    @include font-size($base-font-size + 2);
}

@mixin font-size-xl {
    @include font-size($heading-size-1);
}




// Simple truncation mixin to cut off text using an ellipsis after a certain
// width.
//
// .simple-usage {
//   @include truncate();
// }
//
// .detailed-usage {
//   @include truncate(<value>);
// }

@mixin truncate($limit: 100%) {
    max-width: $limit;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
}




// Clearfix
@mixin clearfix {
    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}




@mixin bg-text($bg-color) {
  background-color: $bg-color;
  color: set-text-color($bg-color);
}
