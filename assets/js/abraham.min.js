var componentHandler={upgradeDom:function(e,n){},upgradeElement:function(e,n){},upgradeElements:function(e){},upgradeAllRegistered:function(){},registerUpgradedCallback:function(e,n){},register:function(e){},downgradeElements:function(e){}};componentHandler=function(){"use strict";function e(e,n){for(var t=0;t<u.length;t++)if(u[t].className===e)return"undefined"!=typeof n&&(u[t]=n),u[t];return!1}function n(e){var n=e.getAttribute("data-upgraded");return null===n?[""]:n.split(",")}function t(e,t){var r=n(e);return-1!==r.indexOf(t)}function r(n,t){if("undefined"==typeof n&&"undefined"==typeof t)for(var a=0;a<u.length;a++)r(u[a].className,u[a].cssClass);else{var s=n;if("undefined"==typeof t){var d=e(s);d&&(t=d.cssClass)}for(var l=document.querySelectorAll("."+t),c=0;c<l.length;c++)o(l[c],s)}}function o(r,o){if(!("object"==typeof r&&r instanceof Element))throw new Error("Invalid argument provided to upgrade MDL element.");var a=n(r),s=[];if(o)t(r,o)||s.push(e(o));else{var d=r.classList;u.forEach(function(e){d.contains(e.cssClass)&&-1===s.indexOf(e)&&!t(r,e.className)&&s.push(e)})}for(var l,c=0,i=s.length;i>c;c++){if(l=s[c],!l)throw new Error("Unable to find a registered component for the given class.");a.push(l.className),r.setAttribute("data-upgraded",a.join(","));var p=new l.classConstructor(r);p[g]=l,m.push(p);for(var f=0,v=l.callbacks.length;v>f;f++)l.callbacks[f](r);l.widget&&(r[l.className]=p);var h=document.createEvent("Events");h.initEvent("mdl-componentupgraded",!0,!0),r.dispatchEvent(h)}}function a(e){Array.isArray(e)||(e="function"==typeof e.item?Array.prototype.slice.call(e):[e]);for(var n,t=0,r=e.length;r>t;t++)n=e[t],n instanceof HTMLElement&&(o(n),n.children.length>0&&a(n.children))}function s(n){var t="undefined"==typeof n.widget&&"undefined"==typeof n.widget,r=!0;t||(r=n.widget||n.widget);var o={classConstructor:n.constructor||n.constructor,className:n.classAsString||n.classAsString,cssClass:n.cssClass||n.cssClass,widget:r,callbacks:[]};if(u.forEach(function(e){if(e.cssClass===o.cssClass)throw new Error("The provided cssClass has already been registered: "+e.cssClass);if(e.className===o.className)throw new Error("The provided className has already been registered")}),n.constructor.prototype.hasOwnProperty(g))throw new Error("MDL component classes must not have "+g+" defined as a property.");var a=e(n.classAsString,o);a||u.push(o)}function d(n,t){var r=e(n);r&&r.callbacks.push(t)}function l(){for(var e=0;e<u.length;e++)r(u[e].className)}function c(e){for(var n=0;n<m.length;n++){var t=m[n];if(t.element_===e)return t}return null}function i(e){if(e&&e[g].classConstructor.prototype.hasOwnProperty(f)){e[f]();var n=m.indexOf(e);m.splice(n,1);var t=e.element_.getAttribute("data-upgraded").split(","),r=t.indexOf(e[g].classAsString);t.splice(r,1),e.element_.setAttribute("data-upgraded",t.join(","));var o=document.createEvent("Events");o.initEvent("mdl-componentdowngraded",!0,!0),e.element_.dispatchEvent(o)}}function p(e){var n=function(e){i(c(e))};if(e instanceof Array||e instanceof NodeList)for(var t=0;t<e.length;t++)n(e[t]);else{if(!(e instanceof Node))throw new Error("Invalid argument provided to downgrade MDL nodes.");n(e)}}var u=[],m=[],f="mdlDowngrade",g="mdlComponentConfigInternal_";return{upgradeDom:r,upgradeElement:o,upgradeElements:a,upgradeAllRegistered:l,registerUpgradedCallback:d,register:s,downgradeElements:p}}(),componentHandler.ComponentConfigPublic,componentHandler.ComponentConfig,componentHandler.Component,componentHandler.upgradeDom=componentHandler.upgradeDom,componentHandler.upgradeElement=componentHandler.upgradeElement,componentHandler.upgradeElements=componentHandler.upgradeElements,componentHandler.upgradeAllRegistered=componentHandler.upgradeAllRegistered,componentHandler.registerUpgradedCallback=componentHandler.registerUpgradedCallback,componentHandler.register=componentHandler.register,componentHandler.downgradeElements=componentHandler.downgradeElements,window.componentHandler=componentHandler,window.componentHandler=componentHandler,window.addEventListener("load",function(){"use strict";"classList"in document.createElement("div")&&"querySelector"in document&&"addEventListener"in window&&Array.prototype.forEach?(document.documentElement.classList.add("mdl-js"),componentHandler.upgradeAllRegistered()):(componentHandler.upgradeElement=function(){},componentHandler.register=function(){})});
//# sourceMappingURL=abraham.min.js.map
